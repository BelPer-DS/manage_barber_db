create user 'USBARBER'@'localhost' identified BY 'Us*B4rb3rM4';
GRANT ALL PRIVILEGES ON barbershop_db.* TO 'USBARBER'@'localhost';

drop database barbershop_db;
commit;

create database barbershop_db;
use barbershop_db;

CREATE TABLE IMAGES (
	ID_IMAGE INT NOT NULL AUTO_INCREMENT,
    TITLE VARCHAR(150),
    TYPE VARCHAR(50) NOT NULL,
    PATH LONGBLOB,
    EXTERNAL_PATH VARCHAR(1000),
    STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY(ID_IMAGE)
);

CREATE TABLE CUSTOMERS (
	ID_CUSTOMER INT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(100) NOT NULL,
    LAST_NAME VARCHAR(100),
    ALIAS_NAME VARCHAR(50),
    PHONE_NUMBER VARCHAR(15) NOT NULL UNIQUE,
    MAIL VARCHAR(150),
    IMG_PERFIL INT,
    IMG_QR INT,
    ACCESS_CODE VARCHAR(100) NOT NULL,
    STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY (ID_CUSTOMER),
    FOREIGN KEY (IMG_PERFIL) REFERENCES IMAGES(ID_IMAGE),
    FOREIGN KEY (IMG_QR) REFERENCES IMAGES(ID_IMAGE)
);

CREATE TABLE EMPLOYEES (
	ID_EMPLOYEE INT NOT NULL AUTO_INCREMENT,
    ID_ACCOUNT VARCHAR(8) NOT NULL UNIQUE,
    NAME VARCHAR(150) NOT NULL,
    LAST_NAME VARCHAR(150),
    ROLE VARCHAR(10),
    PHONE_NUMBER VARCHAR(15),
    MAIL VARCHAR(150),
    IMG_PERFIL INT,
    STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY (ID_EMPLOYEE)
);

CREATE TABLE ACCESS (
	ID_ACCESS INT NOT NULL AUTO_INCREMENT,
    ID_EMPLOYEE INT NOT NULL UNIQUE,
    ACCESS_CODE VARCHAR(100) NOT NULL,
    TOKEN VARCHAR(12),
    STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY (ID_ACCESS),
    FOREIGN KEY (ID_EMPLOYEE) REFERENCES EMPLOYEES(ID_EMPLOYEE)
);

CREATE TABLE COMPANIES (
	ID_COMPANY INT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(150),
    IMG_LOGO INT,
    OWNER INT UNIQUE,
    STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY (ID_COMPANY),
    FOREIGN KEY (IMG_LOGO) REFERENCES IMAGES(ID_IMAGE),
    FOREIGN KEY (OWNER) REFERENCES EMPLOYEES(ID_EMPLOYEE)
);

/*AGREGAR TABLA SOLO PARA HORARIOS POR SUBSIDIARIA, FECHAS Y HORARIO INICIO, HORARIO FIN*/
CREATE TABLE SUBSIDIARIES (
	ID_SUBSIDIARY INT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(150),
    LOCATION VARCHAR(250),
    PHONE_NUMBER_1 VARCHAR(15),
    PHONE_NUMBER_2 VARCHAR(15),
    PHONE_NUMBER_3 VARCHAR(15),
    ID_COMPANY INT NOT NULL,
    STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY (ID_SUBSIDIARY),
    FOREIGN KEY (ID_COMPANY) REFERENCES COMPANIES(ID_COMPANY)
);

CREATE TABLE EMPLOYEES_SUBSIDIARIES(
	ID_EMPLOYEE_ID_SUBSIDIARY INT NOT NULL AUTO_INCREMENT,
    ID_EMPLOYEE INT NOT NULL,
    ID_SUBSIDIARY INT NOT NULL,
    PRIMARY KEY (ID_EMPLOYEE_ID_SUBSIDIARY),
    FOREIGN KEY (ID_EMPLOYEE) REFERENCES EMPLOYEES(ID_EMPLOYEE),
    FOREIGN KEY (ID_SUBSIDIARY) REFERENCES SUBSIDIARIES(ID_SUBSIDIARY)
);

CREATE TABLE PRODUCTS(
	ID_PRODUCT INT NOT NULL AUTO_INCREMENT,
    SKU VARCHAR(50) UNIQUE,
    NAME VARCHAR(150),
    DESCRIPTION VARCHAR(250),
    PRECIO DECIMAL,
    STOCK INT,
    VOLUME  DECIMAL,
    UNIT_MEASUREMENT VARCHAR(10), 
    TYPE VARCHAR(10),
    CATEGORY VARCHAR(10),
	STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY (ID_PRODUCT)
);

CREATE TABLE PROMOTIONS (
	ID_PROMOTION INT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(150),
    DESCRIPTION VARCHAR(500),
    CATEGORY VARCHAR(10),
    PERCENTAGE DECIMAL,
    VALIDITY_START DATETIME,
    VALIDITY_END DATETIME, 
    IMG_PUBLICITY INT,
    STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY (ID_PROMOTION)
);

CREATE TABLE PROMOTION_PRODUCTS(
	ID_PROMOTION_PRODUCTS INT NOT NULL AUTO_INCREMENT,
    ID_PROMOTION INT NOT NULL,
    ID_PRODUCT INT NOT NULL,
    PRIMARY KEY(ID_PROMOTION_PRODUCTS),
    FOREIGN KEY(ID_PROMOTION) REFERENCES PROMOTIONS(ID_PROMOTION),
    FOREIGN KEY(ID_PRODUCT) REFERENCES PRODUCTS(ID_PRODUCT)
);

CREATE TABLE TRANSACTIONS (
	ID_TRANSACTION INT NOT NULL AUTO_INCREMENT,
    ID_OPERATION VARCHAR(20) UNIQUE,
    SUBTOTAL DECIMAL NOT NULL,
    TOTAL DECIMAL NOT NULL,
    TAX DECIMAL NOT NULL,
    PAYMENT_TYPE VARCHAR(10),
    TOTAL_DISCOUNT DECIMAL,
    REFERENCE VARCHAR(10),
    TRANSACTION_DATE DATETIME,
    ID_EMPLOYEE INT,
    STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY (ID_TRANSACTION),
    FOREIGN KEY (ID_EMPLOYEE) REFERENCES EMPLOYEES(ID_EMPLOYEE)
);

CREATE TABLE TRANSACTIONS_PRODUCTS (
	ID_TRANSACTION_PRODUCT INT NOT NULL AUTO_INCREMENT,
    ID_TRANSACTION INT,
    ID_PRODUCT INT,
    QUANTITY INT NOT NULL,
    UNIT_PRICE DECIMAL,
    SUBTOTAL DECIMAL,
    DISCOUNT_RATE DECIMAL,
    DISCOUNT_AMOUNT DECIMAL,
    AMOUNT DECIMAL,
    ID_PROMOTION INT,
    STATUS VARCHAR(15),
    CREATE_USER INT,
    CREATE_DATE DATETIME,
    MODIFY_USER INT,
    MODIFY_DATE DATETIME,
    PRIMARY KEY(ID_TRANSACTION_PRODUCT),
    FOREIGN KEY(ID_PROMOTION) REFERENCES PROMOTIONS(ID_PROMOTION)
);

CREATE TABLE SERVICE_TIME (
	ID_SERVICE_HOURS INT NOT NULL AUTO_INCREMENT,
    MINUTES_TIME INT,
    ID_PRODUCT INT,
    PRIMARY KEY (ID_SERVICE_HOURS),
    FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCTS(ID_PRODUCT)
);
drop table RESERVATIONS;
commit;
CREATE TABLE RESERVATIONS (
	ID_RESERVATION INT NOT NULL AUTO_INCREMENT,
    DATE DATE,
    START_TIME TIME,
    END_TIME TIME,
    ID_CUSTOMER INT NOT NULL,
    ID_SUBSIDIARY INT NOT NULL,
    ID_EMPLOYEE INT NOT NULL,
    PRIMARY KEY (ID_RESERVATION),
    FOREIGN KEY (ID_EMPLOYEE) REFERENCES EMPLOYEES(ID_EMPLOYEE),
    FOREIGN KEY (ID_CUSTOMER) REFERENCES CUSTOMERS(ID_CUSTOMER),
    FOREIGN KEY (ID_SUBSIDIARY) REFERENCES SUBSIDIARIES(ID_SUBSIDIARY)
);

/*Pendiente. 
	Crear tabla para reservaciones
    Validar como guardar el tiempo por servicio*/